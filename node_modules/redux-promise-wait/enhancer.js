'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _redux = require('redux');

var _isPromise = require('is-promise');

var _isPromise2 = _interopRequireDefault(_isPromise);

var _actions = require('./actions');

var _reducer = require('./reducer');

var _reducer2 = _interopRequireDefault(_reducer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

exports.default = function () {
  var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

  var _ref$handleAction = _ref.handleAction;
  var handleAction = _ref$handleAction === undefined ? function (_ref2) {
    var payload = _ref2.payload;
    return payload;
  } : _ref$handleAction;
  var _ref$storeName = _ref.storeName;
  var storeName = _ref$storeName === undefined ? 'waitStore' : _ref$storeName;
  return function (next) {
    return function (reducer, initialState) {
      var _extends2;

      var store = next(reducer, initialState);
      var waitStore = (0, _redux.createStore)(_reducer2.default);

      return _extends({}, store, (_extends2 = {}, _defineProperty(_extends2, storeName, waitStore), _defineProperty(_extends2, 'dispatch', function dispatch(action) {
        var promise = handleAction(action);
        if ((0, _isPromise2.default)(promise)) {
          waitStore.dispatch((0, _actions.addAction)(action, promise));
        }
        return store.dispatch(action);
      }), _extends2));
    };
  };
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9lbmhhbmNlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7a0JBS2U7bUVBR1g7OytCQUZGO3VEQUFlO1FBQUc7V0FBYztHQUFqQjs0QkFDZjtpREFBWTtTQUVaLFVBQUMsSUFBRDtXQUFVLFVBQUMsT0FBRCxFQUFVLFlBQVYsRUFBMkI7OztBQUNuQyxVQUFNLFFBQVEsS0FBSyxPQUFMLEVBQWMsWUFBZCxDQUFSLENBRDZCO0FBRW5DLFVBQU0sWUFBWSwwQ0FBWixDQUY2Qjs7QUFJbkMsMEJBQ0ssbURBQ0YsV0FBWSxxRUFDSixRQUFRO0FBQ2YsWUFBTSxVQUFVLGFBQWEsTUFBYixDQUFWLENBRFM7QUFFZixZQUFJLHlCQUFVLE9BQVYsQ0FBSixFQUF3QjtBQUN0QixvQkFBVSxRQUFWLENBQW1CLHdCQUFVLE1BQVYsRUFBa0IsT0FBbEIsQ0FBbkIsRUFEc0I7U0FBeEI7QUFHQSxlQUFPLE1BQU0sUUFBTixDQUFlLE1BQWYsQ0FBUCxDQUxlO3FCQUhuQixDQUptQztLQUEzQjtHQUFWO0NBSmEiLCJmaWxlIjoiZW5oYW5jZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2NyZWF0ZVN0b3JlfSBmcm9tICdyZWR1eCc7XG5pbXBvcnQgaXNQcm9taXNlIGZyb20gJ2lzLXByb21pc2UnO1xuaW1wb3J0IHsgYWRkQWN0aW9uIH0gZnJvbSAnLi9hY3Rpb25zJztcbmltcG9ydCB3YWl0UmVkdWNlciBmcm9tICcuL3JlZHVjZXInO1xuXG5leHBvcnQgZGVmYXVsdCAoe1xuICBoYW5kbGVBY3Rpb24gPSAoeyBwYXlsb2FkIH0pID0+IHBheWxvYWQsXG4gIHN0b3JlTmFtZSA9ICd3YWl0U3RvcmUnLFxufSA9IHt9KSA9PlxuICAobmV4dCkgPT4gKHJlZHVjZXIsIGluaXRpYWxTdGF0ZSkgPT4ge1xuICAgIGNvbnN0IHN0b3JlID0gbmV4dChyZWR1Y2VyLCBpbml0aWFsU3RhdGUpO1xuICAgIGNvbnN0IHdhaXRTdG9yZSA9IGNyZWF0ZVN0b3JlKHdhaXRSZWR1Y2VyKTtcblxuICAgIHJldHVybiB7XG4gICAgICAuLi5zdG9yZSxcbiAgICAgIFtzdG9yZU5hbWVdOiB3YWl0U3RvcmUsXG4gICAgICBkaXNwYXRjaChhY3Rpb24pIHtcbiAgICAgICAgY29uc3QgcHJvbWlzZSA9IGhhbmRsZUFjdGlvbihhY3Rpb24pO1xuICAgICAgICBpZiAoaXNQcm9taXNlKHByb21pc2UpKSB7XG4gICAgICAgICAgd2FpdFN0b3JlLmRpc3BhdGNoKGFkZEFjdGlvbihhY3Rpb24sIHByb21pc2UpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc3RvcmUuZGlzcGF0Y2goYWN0aW9uKTtcbiAgICAgIH0sXG4gICAgfTtcbiAgfTtcbiJdfQ==